server:
  ip-address: 192.168.2.119
  port: 7900
routing:
  key: ${server.ip-address}:${server.port}
spring:
  jpa:
    generate-ddl: false
    show-sql: true
    hibernate:
      ddl-auto: none
  datasource:
    platform: h2
    schema: classpath:schema.sql
    data: classpath:data.sql
  application:
    name: microservice-provider-user
logging:
  config: classpath:logback.xml
#  level:
#    root: INFO
#    org.hibernate: INFO
#    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
#    org.hibernate.type.descriptor.sql.BasicExtractor: TRACE
#    com.danny: DEBUG
eureka:
  client:
    healthcheck:       # 需要引入spring-boot-starter-actuator
      enabled: true
    serviceUrl:
#      defaultZone: http://user:password123@server1:8761/eureka/,http://server2:8762/eureka/
#      defaultZone: http://user:password123@server1:8761/eureka/,http://server2:8762/eureka/,http://server3:8763/eureka/
#      defaultZone: http://server1:8761/eureka/,http://server2:8762/eureka/,http://server3:8763/eureka/
      defaultZone: http://user:password123@localhost:8761/eureka
      registry-fetch-interval-seconds: 30
  instance:                 #Eureka配置instanceId显示IP
    ip-address: 192.168.2.119
    hostname: server1
#    prefer-ip-address: false
    prefer-ip-address: true
    instance-id: ${eureka.instance.ip-address}:${server.port}
    metadata-map:
      zone: ABC      # eureka可以理解的元数据
      lilizhou: BBC  # 不会影响客户端行为
    lease-renewal-interval-in-seconds: 5

#  instance:                 #Eureka配置instanceId显示IP
#    prefer-ip-address: true
#    instance-id: ${spring.application.name}:${spring.cloud.client.ipAddress}:${spring.application.instance_id:${server.port}}
#    metadata-map:
#      zone: ABC      # eureka可以理解的元数据
#      lilizhou: BBC  # 不会影响客户端行为
#    lease-renewal-interval-in-seconds: 5
#security:
#  basic:
#    enabled: true
#  user:
#    name: test
#    password: test
#management:
#  security:
#    enabled: false


